#!/usr/bin/env python
PACKAGE = "ros_pat"

from dynamic_reconfigure.parameter_generator_catkin import *
    
gen = ParameterGenerator()

# Guidance
guidance_group = gen.add_group("Guidance", type="tab")

# FMS mode (level 0)
fms_mode_enum = gen.enum([gen.const("auto1",       int_t, 0, "Auto1"),
                          gen.const("circle",      int_t, 1, "Circle"),
	      		  gen.const("soaring",     int_t, 2, "Soaring"),
	      		  gen.const("ardusoaring", int_t, 3, "ArduSoaring"),
                          gen.const("searching",   int_t, 4, "Searching")],
                         "fms_mode")
guidance_group.add("fms_mode", int_t, 0, "fms_mode", 1, 0, 4, edit_method=fms_mode_enum)

# Air velocity septpoint (level 0)
guidance_group.add("vsp",  double_t, 0, "air vel setpoint", 9., 6, 20)

# Pure Pursuit (level 0)
lookahead_mode_enum = gen.enum([ gen.const("cst",  int_t, 0, "Cst"),
                                 gen.const("adp",  int_t, 1, "Adaptive")],
                               "lookahead_mode")
guidance_group.add("lookahead_mode", int_t, 0, "lookahead_mode", 0, 0, 1, edit_method=lookahead_mode_enum)
guidance_group.add("lookahead_dist", double_t, 0, "Look Ahead Dist", 15.,  5., 30.)

# circle (level 2)
guidance_circle_group = guidance_group.add_group("Circle", type="tab")
guidance_circle_group.add("circle_xc", double_t, 2, "center X", 0, -100, 100)
guidance_circle_group.add("circle_yc", double_t, 2, "center Y", 0, -100, 100)
guidance_circle_group.add("circle_zc", double_t, 2, "center Z", 0, -100, 100)
guidance_circle_group.add("circle_r",  double_t, 2, "radius",  20, -100, 100)

# climbing (level 3)
guidance_climbing_group = guidance_group.add_group("Climbing (thermal)", type="tab")
guidance_climbing_group.add("climbing_radius",  double_t, 3, "climbing radius", 12.5, 7., 50.)
guidance_climbing_group.add("climbing_gain", double_t, 3, "climbing gain", 0.002, 0., 0.05)

# atmosphere (level 1)
thermal_group = gen.add_group("Atmosphere", type="tab")
thermal_group.add("idx",     int_t,    1, "thermal idx", 0, 0, 10)
thermal_group.add("thxc",    double_t, 1, "thermal center X", 55, -100, 100)
thermal_group.add("thyc",    double_t, 1, "thermal center Y", 0, -100, 100)
thermal_group.add("thzi",    double_t, 1, "thermal zi", 2000, 100, 3000)
thermal_group.add("thwstar", double_t, 1, "thermal wstar", 256, 100, 512)

exit(gen.generate(PACKAGE, "ros_pat", "guidance"))
